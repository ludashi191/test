Github使用笔记
1.本地创建ssh key
$ ssh-keygen -t rsa -C "your_email@youremail.com"

2.验证是否创建成功
git bash下输入ssh -T git@github.com

3.绑定用户
 git config --global user.name "your name"
 git config --global user.email "your_email@youremail.com"
 
 4.克隆远程仓库：
git clone https://github.com/jerryhanjj/baike_spider.git

5.添加远程地址
git remote add origin git@github.com:yourName/yourRepo.git
后面的yourName和yourRepo表示你再github的用户名和刚才新建的仓库，加完之后进入.git，打开config，这里会多出一个remote "origin"内容，
这就是刚才添加的远程地址，也可以直接修改config来配置远程地址。
创建新文件夹，打开，然后执行 git init 以创建新的 git 仓库。

6.更新与合并
要更新你的本地仓库至最新改动，执行：
git pull
以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。
要合并其他分支到你的当前分支（例如 master），执行：
git merge <branch>
在这两种情况下，git 都会尝试去自动合并改动。遗憾的是，这可能并非每次都成功，并可能出现冲突（conflicts）。 这时候就需要你修改这些文件来手动合并这些冲突（conflicts）。改完之后，你需要执行如下命令以将它们标记为合并成功：
git add <filename>
在合并改动之前，你可以使用如下命令预览差异：
git diff <source_branch> <target_branch>

7.分支操作：
创建一个叫做"feature_x"的分支，并切换过去：
git checkout -b feature_x
切换回主分支：
git checkout master
再把新建的分支删掉：
git branch -d feature_x
除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的：
git push origin <branch>

8.显示历史记录时，每个提交的信息只显示一行：
git config format.pretty oneline

9.如何将牛人的远程分支更新到自己的本地分支？
# 查看当前项目下远程
# git remote
# 增加新的分支链接，例如
git remote add niuren giturl…
# 获取牛人的远程更新
git fetch niuren
# 将牛人的远程更新合并到本地分支
git merge niuren/master

10.生产力小技巧
codeshelver：给git库做标签
观察的项目如果多了，怎么管理？用codeshelver，安装扩展之后，可以对GitHub项目做标签。